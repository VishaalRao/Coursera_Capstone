{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# CAPSTONE PROJECT: BATTLE OF THE NEIGHBORHOODS (PART 2)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Applied Data science Capstone by Vishaal Rao"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Introduction: Business Problem <a name=\"introduction\"></a>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Let us consider a business owner planning to open a fast food resturant in Mumbai. She has approached us to recommend an ideal location to open this resturant.In this use case, an ideal location would be one that can maximise footfall in the resturant in order to maximize her profits.\n",
    "\n",
    "Additionally, once provided an ideal location, she would also like to acquire:\n",
    "  \n",
    "  1. Average price range of the resturants nearby: This will allow her to design her price her offerings competitively.\n",
    "  \n",
    "  2. Average rating of the restaurants nearby: This will allow her to gauge her competition. For e.g. Highly rated resturants means going up against well established players.\n",
    "  \n",
    "  3. Combined total number of ratings of resturants nearby: This will not give the exact footfall but could be used to compare 2 locations. Location with greater number of ratings in most cases implies greater footfall.\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Our Approach:\n",
    "Before we get started, I would like to incorporate a few of my experiences/ideas to optimise our approach to finding an ideal location:\n",
    "\n",
    "  1. Mumbai has one of busiest commuter rail systems with over 7.5 million commuters daily. Locating a resturant near a rail station can result in a high footfall. I personally have visited some of the popular resturants near rail stations and have always found them jam packed!\n",
    "\n",
    "  2. We should also optimise for locations with high densities of fast food resturants. This idea is based on the concept of game theory and Nesh equilibrium theorem, which imply that when shops of the same kind open close to one another, these shops tend to enjoy better profits.\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Methodology"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Incorporating the aforementioned ideas, our solution will consist of the following steps:\n",
    "\n",
    "1. Acquire the locations of fast food resturants in mumbai, along with their price-range, ratings. We shall utilise Foursqaure API for this.\n",
    "\n",
    "2. Acquire the locations of rail stations in mumbai using the foursquare API.\n",
    "\n",
    "3. Study the price-range, ratings and number of likes given to these eshtablishment in order to gt a better understanding of the competition\n",
    "\n",
    "4. Clustering and understanding the locations with the high denstiy of fast food resturaunts using KMeans.\n",
    "\n",
    "5. Removing all the outliers railway station which arent anywhere close to the clusters and marking the ones which are within 2 km of the cluster centres.\n",
    "\n",
    "6. Since there is no dataset about the footfall in the stations we shall datascrape that information off a blog post and draw up a conclusion.\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Functions used in the following program"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "%matplotlib inline\n",
    "\n",
    "import pandas as pd #For DataFrame Manipulation\n",
    "\n",
    "import os #For accessing previously saved file\n",
    "\n",
    "from geopy.geocoders import Nominatim #For accessing latitude and Longtitude\n",
    "\n",
    "import folium #For Map Manipulation\n",
    "\n",
    "import requests #For accessing url\n",
    "\n",
    "import json #For json file manipulation\n",
    "\n",
    "import numpy as np #Mathematical manipulation\n",
    "\n",
    "from sklearn.cluster import KMeans #For clustering\n",
    "\n",
    "import matplotlib.cm as cm #for plotting  on maps\n",
    "\n",
    "import matplotlib.colors as colors #for color pallete\n",
    "\n",
    "from math import radians, sin, cos, acos,isnan # To calculate the distance between 2 points based on Latitude and Longitude\n",
    "\n",
    "from bs4 import BeautifulSoup # Data scraping\n",
    "\n",
    "import requests # To get HTML file of web pages\n",
    "\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "plt.style.use('ggplot')\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Foursquare API Details"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Your credentails:\n",
      "CLIENT_ID: O4QXRWP31S2P4IFTE50GVWNNSH0MDF24YYFOIANX4RS55JGT\n",
      "CLIENT_SECRET:1Q31LNOALLLPX0TGLTDNOIBUQP0E3UJTRSSW5RVKPDSDWG4M\n"
     ]
    }
   ],
   "source": [
    "CLIENT_ID = 'O4QXRWP31S2P4IFTE50GVWNNSH0MDF24YYFOIANX4RS55JGT' # your Foursquare ID\n",
    "CLIENT_SECRET = '1Q31LNOALLLPX0TGLTDNOIBUQP0E3UJTRSSW5RVKPDSDWG4M' # your Foursquare Secret\n",
    "VERSION = '20180323' # Foursquare API version\n",
    "\n",
    "print('Your credentails:')\n",
    "print('CLIENT_ID: ' + CLIENT_ID)\n",
    "print('CLIENT_SECRET:' + CLIENT_SECRET)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The few code blocks below help us getting details neccesary in our project.\n",
    "\n",
    "The search command gives us the venue id of the venues based on the following inputs:\n",
    "\n",
    "https://api.foursquare.com/v2/venues/search?\n",
    "\n",
    " - near        : It is the name of the area, district or city of interest. Here we chosen Mumbai\n",
    " \n",
    " - Category ID : The category ID is used to specify the type of venues we are looking for,\"4bf58dd8d48988d16e941735\" is the  category id for fast food resturaunts\n",
    " \n",
    " - Radius      : Radius in which the venue should be present, we have chosen most of mumbai main area\n",
    " \n",
    " - limit       : Number of venues(100) "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [],
   "source": [
    "LIMIT = 100\n",
    "radius =10000\n",
    "url = 'https://api.foursquare.com/v2/venues/search?&client_id={}&client_secret={}&v={}&near=Mumbai&categoryId=4bf58dd8d48988d16e941735&radius={}&limit={}'.format(\n",
    "    CLIENT_ID, \n",
    "    CLIENT_SECRET, \n",
    "    VERSION,  \n",
    "    radius, \n",
    "    LIMIT)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Venue IDs have been located\n"
     ]
    }
   ],
   "source": [
    "results = requests.get(url).json()\n",
    "print(\"Venue IDs have been located\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [],
   "source": [
    "Venue_ID=[]\n",
    "for i in range(len(results['response']['venues'])):\n",
    "    Venue_ID.append(results['response']['venues'][i]['id'])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Using the venue ID's collected in the previous api call, we will be getting the details of each venue using the venues call:\n",
    "'https://api.foursquare.com/v2/venues/VENUE_ID'\n",
    "<br> \n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The details have been recieved\n"
     ]
    }
   ],
   "source": [
    "Details=[]\n",
    "\n",
    "for i,v in enumerate(Venue_ID):\n",
    "    url = 'https://api.foursquare.com/v2/venues/{}?&client_id={}&client_secret={}&v={}'.format(\n",
    "        v,\n",
    "        CLIENT_ID, \n",
    "        CLIENT_SECRET, \n",
    "        VERSION)\n",
    "    \n",
    "    Details.append(requests.get(url).json())\n",
    "    \n",
    "print(\"The details have been recieved\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "From the above api call,the details of 'Name', 'Rating', 'Price', 'Latitude', 'Longitude' is taken and made into a dataframe\n",
    "**DetailsPD**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [],
   "source": [
    "Names=[]\n",
    "Rating=[]\n",
    "price=[]\n",
    "Latitude=[]\n",
    "Longitude=[]\n",
    "likes=[]\n",
    "\n",
    "for i in range(len(Details)):   \n",
    "    Names.append(Details[i]['response']['venue']['name'])\n",
    "    try:\n",
    "        Rating.append(Details[i]['response']['venue']['rating'])\n",
    "    except:\n",
    "        Rating.append(np.nan)\n",
    "    price.append(Details[i]['response']['venue']['price']['tier'])  \n",
    "    Latitude.append(Details[i]['response']['venue']['location']['lat'])\n",
    "    Longitude.append(Details[i]['response']['venue']['location']['lng'])\n",
    "    likes.append(Details[i]['response']['venue']['likes']['count'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [],
   "source": [
    "DetailsPD = pd.DataFrame(\n",
    "    {'Names': Names,\n",
    "     'Rating': Rating,\n",
    "     'Price': price,\n",
    "     'Latitude': Latitude,\n",
    "     'Longitude': Longitude,\n",
    "     'Number of likes':likes\n",
    "    })"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Names</th>\n",
       "      <th>Rating</th>\n",
       "      <th>Price</th>\n",
       "      <th>Latitude</th>\n",
       "      <th>Longitude</th>\n",
       "      <th>Number of likes</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>McDonald's</td>\n",
       "      <td>6.6</td>\n",
       "      <td>1</td>\n",
       "      <td>19.072822</td>\n",
       "      <td>72.866768</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Shiv Sagar</td>\n",
       "      <td>7.0</td>\n",
       "      <td>2</td>\n",
       "      <td>19.098715</td>\n",
       "      <td>72.827614</td>\n",
       "      <td>45</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>McDonald's</td>\n",
       "      <td>7.5</td>\n",
       "      <td>1</td>\n",
       "      <td>19.141247</td>\n",
       "      <td>72.825579</td>\n",
       "      <td>37</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>McDonald's</td>\n",
       "      <td>6.6</td>\n",
       "      <td>1</td>\n",
       "      <td>19.065785</td>\n",
       "      <td>72.834304</td>\n",
       "      <td>66</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>McDonald's</td>\n",
       "      <td>6.8</td>\n",
       "      <td>1</td>\n",
       "      <td>19.165871</td>\n",
       "      <td>72.937905</td>\n",
       "      <td>45</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "        Names  Rating  Price   Latitude  Longitude  Number of likes\n",
       "0  McDonald's     6.6      1  19.072822  72.866768                3\n",
       "1  Shiv Sagar     7.0      2  19.098715  72.827614               45\n",
       "2  McDonald's     7.5      1  19.141247  72.825579               37\n",
       "3  McDonald's     6.6      1  19.065785  72.834304               66\n",
       "4  McDonald's     6.8      1  19.165871  72.937905               45"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "DetailsPD.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [],
   "source": [
    "DetailsPD['Rating'].fillna(round((DetailsPD['Rating'].mean())), inplace=True) #NA is converted to mean in 'Rating'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [],
   "source": [
    "latitude=19.0760\n",
    "longitude=72.8777  #Mumbai lat long"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [],
   "source": [
    "mumbai_map = folium.Map(location = [latitude, longitude], zoom_start = 12) #Declaring the map"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div style=\"width:100%;\"><div style=\"position:relative;width:100%;height:0;padding-bottom:60%;\"><iframe src=\"data:text/html;charset=utf-8;base64,\" style=\"position:absolute;width:100%;height:100%;left:0;top:0;border:none !important;\" allowfullscreen webkitallowfullscreen mozallowfullscreen></iframe></div></div>"
      ],
      "text/plain": [
       "<folium.folium.Map at 0x839e6f6240>"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Map for marking all the fast food joints collected\n",
    "\n",
    "mark = folium.map.FeatureGroup()\n",
    "\n",
    "for lat, lng, in zip(DetailsPD.Latitude, DetailsPD.Longitude):\n",
    "    mark.add_child(\n",
    "        folium.features.CircleMarker(\n",
    "            [lat, lng],\n",
    "            radius=5, \n",
    "            color='yellow',\n",
    "            fill=True,\n",
    "            fill_color='blue',\n",
    "            fill_opacity=0.6\n",
    "        )\n",
    "    )\n",
    "\n",
    "# add incidents to map\n",
    "mumbai_map.add_child(mark)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [],
   "source": [
    "X=DetailsPD.loc[:,['Latitude','Longitude']] #Getting Lat Long"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Getting Location details for railway stations"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Same as above, here we are using the search function with similar inputs, with only difference being the category ID which is\n",
    "'4bf58dd8d48988d129951735' which represents the train stations."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [],
   "source": [
    "Rails=[]\n",
    "VERSION='20180323'\n",
    "for i,v in enumerate(Venue_ID):\n",
    "    url = 'https://api.foursquare.com/v2/venues/search?&client_id={}&client_secret={}&v={}&categoryId=4bf58dd8d48988d129951735&near=Mumbai&radius=25000'.format(\n",
    "        CLIENT_ID, \n",
    "        CLIENT_SECRET, \n",
    "        VERSION)\n",
    "    \n",
    "    Rails.append(requests.get(url).json())"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Creating a dataframe RailsPD with columns 'RNames','Rlatitude', 'Rlongitude'."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [],
   "source": [
    "RNames=[]\n",
    "RLatitude=[]\n",
    "RLongitude=[]\n",
    "\n",
    "\n",
    "\n",
    "for j in range(len(Rails[0]['response']['venues'])):\n",
    "    RNames.append(Rails[0]['response']['venues'][j]['name']) \n",
    "    RLatitude.append(Rails[0]['response']['venues'][j]['location']['lat'])\n",
    "    RLongitude.append(Rails[0]['response']['venues'][j]['location']['lng'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [],
   "source": [
    "RailsPD = pd.DataFrame(\n",
    "    {'Names': RNames,\n",
    "     'Latitude': RLatitude,\n",
    "     'Longitude': RLongitude\n",
    "    })"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Since one of the clusters was heavily focused around a station which was not present in the foursquare venues we will be adding it manually"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [],
   "source": [
    "RailsPD.loc[30] = ['Goregaon railway station',19.1646,72.8493]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Names</th>\n",
       "      <th>Latitude</th>\n",
       "      <th>Longitude</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Kurla Railway Station</td>\n",
       "      <td>19.065333</td>\n",
       "      <td>72.879335</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Chhatrapati Shivaji Maharaj Terminus</td>\n",
       "      <td>18.940297</td>\n",
       "      <td>72.835384</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Churchgate Railway Station</td>\n",
       "      <td>18.934706</td>\n",
       "      <td>72.827329</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Thane Railway Station</td>\n",
       "      <td>19.186344</td>\n",
       "      <td>72.976082</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Marol Naka Metro Station</td>\n",
       "      <td>19.108143</td>\n",
       "      <td>72.879373</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                  Names   Latitude  Longitude\n",
       "0                 Kurla Railway Station  19.065333  72.879335\n",
       "1  Chhatrapati Shivaji Maharaj Terminus  18.940297  72.835384\n",
       "2            Churchgate Railway Station  18.934706  72.827329\n",
       "3                 Thane Railway Station  19.186344  72.976082\n",
       "4              Marol Naka Metro Station  19.108143  72.879373"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "RailsPD.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Getting the top 10 most liked fast food restauraunts around mumbai"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Names</th>\n",
       "      <th>Rating</th>\n",
       "      <th>Price</th>\n",
       "      <th>Latitude</th>\n",
       "      <th>Longitude</th>\n",
       "      <th>Number of likes</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>Candies</td>\n",
       "      <td>8.6</td>\n",
       "      <td>2</td>\n",
       "      <td>19.049709</td>\n",
       "      <td>72.829785</td>\n",
       "      <td>179</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>Carter's Blue</td>\n",
       "      <td>8.7</td>\n",
       "      <td>1</td>\n",
       "      <td>19.070783</td>\n",
       "      <td>72.823045</td>\n",
       "      <td>127</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>McDonald's</td>\n",
       "      <td>7.4</td>\n",
       "      <td>1</td>\n",
       "      <td>19.119691</td>\n",
       "      <td>72.846102</td>\n",
       "      <td>110</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>30</th>\n",
       "      <td>The Daily</td>\n",
       "      <td>7.6</td>\n",
       "      <td>1</td>\n",
       "      <td>19.060917</td>\n",
       "      <td>72.837070</td>\n",
       "      <td>103</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>McDonald's</td>\n",
       "      <td>6.6</td>\n",
       "      <td>1</td>\n",
       "      <td>19.065785</td>\n",
       "      <td>72.834304</td>\n",
       "      <td>66</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "            Names  Rating  Price   Latitude  Longitude  Number of likes\n",
       "27        Candies     8.6      2  19.049709  72.829785              179\n",
       "25  Carter's Blue     8.7      1  19.070783  72.823045              127\n",
       "16     McDonald's     7.4      1  19.119691  72.846102              110\n",
       "30      The Daily     7.6      1  19.060917  72.837070              103\n",
       "3      McDonald's     6.6      1  19.065785  72.834304               66"
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "DetailsPD.sort_values(by=['Number of likes'],ascending=False).head() #Top 10 "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Number of likes</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Names</th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Candies</th>\n",
       "      <td>179</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Carter's Blue</th>\n",
       "      <td>127</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>McDonald's</th>\n",
       "      <td>110</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>The Daily</th>\n",
       "      <td>103</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>McDonald's</th>\n",
       "      <td>66</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>McDonald's</th>\n",
       "      <td>54</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>D.P's Fast Food Centre</th>\n",
       "      <td>52</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>McDonald's</th>\n",
       "      <td>49</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>McDonald's</th>\n",
       "      <td>49</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Shiv Sagar</th>\n",
       "      <td>45</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                        Number of likes\n",
       "Names                                  \n",
       "Candies                             179\n",
       "Carter's Blue                       127\n",
       "McDonald's                          110\n",
       "The Daily                           103\n",
       "McDonald's                           66\n",
       "McDonald's                           54\n",
       "D.P's Fast Food Centre               52\n",
       "McDonald's                           49\n",
       "McDonald's                           49\n",
       "Shiv Sagar                           45"
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Bar=DetailsPD.sort_values(by=['Number of likes'],ascending=False).head(10).loc[:,['Names','Number of likes']]\n",
    "Bar.set_index('Names')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 576x360 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "Bar.plot(x='Names',kind='barh', figsize=(8, 5),color='Blue')\n",
    "\n",
    "plt.title('Top 10 eshtablishments with highest number of likes',fontsize=18)\n",
    "plt.ylabel('',fontsize=14) # add y-label\n",
    "plt.xlabel('Number of likes',fontsize=14) # add x-label\n",
    "\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {},
   "outputs": [],
   "source": [
    "Boxplot=DetailsPD.loc[:,['Names','Rating']]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "metadata": {},
   "outputs": [],
   "source": [
    "RatingMean=Boxplot.groupby('Names').mean()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 68,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Rating</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Names</th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Carter's Blue</th>\n",
       "      <td>8.7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Candies</th>\n",
       "      <td>8.6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Gulati Sweets and Snacks</th>\n",
       "      <td>8.2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Tibbs</th>\n",
       "      <td>7.9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Trupti</th>\n",
       "      <td>7.8</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                          Rating\n",
       "Names                           \n",
       "Carter's Blue                8.7\n",
       "Candies                      8.6\n",
       "Gulati Sweets and Snacks     8.2\n",
       "Tibbs                        7.9\n",
       "Trupti                       7.8"
      ]
     },
     "execution_count": 68,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "RatingMean.sort_values(by=['Rating'],ascending=False).head(5)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 64,
   "metadata": {},
   "outputs": [],
   "source": [
    "color = dict(boxes='Blue', whiskers='Blue',medians='Black', caps='Gray')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 67,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 576x360 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "RatingMean.plot(kind='box', figsize=(8, 5),color=color,patch_artist=True)\n",
    "\n",
    "plt.title('Rating of all the fast food restaurants',fontsize=18) \n",
    "#plt.ylabel('Rating',fontsize=14) # add y-label\n",
    "plt.xlabel('',fontsize=14) # add x-label\n",
    "\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## The average rating and price of the resturaunts in the area"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "the average rating of the resturaunts is 6.99\n",
      "The average price range of resturaunts is 1.14 (1 being cheap and 4 being expensive)\n"
     ]
    }
   ],
   "source": [
    "print(\"the average rating of the resturaunts is\",round(DetailsPD.Rating.mean(),2))\n",
    "print(\"The average price range of resturaunts is\",round(DetailsPD.Price.mean(),2),\"(1 being cheap and 4 being expensive)\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Clustering"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([4, 0, 2, 0, 1, 0, 4, 3, 1, 2])"
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Clustering\n",
    "\n",
    "# set number of clusters\n",
    "kclusters = 5\n",
    "\n",
    "# run k-means clustering\n",
    "kmeans = KMeans(n_clusters=kclusters, random_state=0).fit(X)\n",
    "\n",
    "# check cluster labels generated for each row in the dataframe\n",
    "kmeans.labels_[0:10]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {},
   "outputs": [],
   "source": [
    "# add clustering labels\n",
    "X.insert(0, 'Cluster Labels', kmeans.labels_)\n",
    "\n",
    "# merge toronto_grouped with toronto_data to add latitude/longitude for each neighborhood\n",
    "DetailsPD_merged = X.merge(DetailsPD, on=['Latitude','Longitude'])\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Cluster Labels</th>\n",
       "      <th>Latitude</th>\n",
       "      <th>Longitude</th>\n",
       "      <th>Names</th>\n",
       "      <th>Rating</th>\n",
       "      <th>Price</th>\n",
       "      <th>Number of likes</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>4</td>\n",
       "      <td>19.072822</td>\n",
       "      <td>72.866768</td>\n",
       "      <td>McDonald's</td>\n",
       "      <td>6.6</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0</td>\n",
       "      <td>19.098715</td>\n",
       "      <td>72.827614</td>\n",
       "      <td>Shiv Sagar</td>\n",
       "      <td>7.0</td>\n",
       "      <td>2</td>\n",
       "      <td>45</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2</td>\n",
       "      <td>19.141247</td>\n",
       "      <td>72.825579</td>\n",
       "      <td>McDonald's</td>\n",
       "      <td>7.5</td>\n",
       "      <td>1</td>\n",
       "      <td>37</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0</td>\n",
       "      <td>19.065785</td>\n",
       "      <td>72.834304</td>\n",
       "      <td>McDonald's</td>\n",
       "      <td>6.6</td>\n",
       "      <td>1</td>\n",
       "      <td>66</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1</td>\n",
       "      <td>19.165871</td>\n",
       "      <td>72.937905</td>\n",
       "      <td>McDonald's</td>\n",
       "      <td>6.8</td>\n",
       "      <td>1</td>\n",
       "      <td>45</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>0</td>\n",
       "      <td>19.100573</td>\n",
       "      <td>72.840708</td>\n",
       "      <td>McDonald's</td>\n",
       "      <td>6.2</td>\n",
       "      <td>1</td>\n",
       "      <td>36</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>4</td>\n",
       "      <td>19.106139</td>\n",
       "      <td>72.884878</td>\n",
       "      <td>McDonald's</td>\n",
       "      <td>6.5</td>\n",
       "      <td>1</td>\n",
       "      <td>34</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>3</td>\n",
       "      <td>19.023367</td>\n",
       "      <td>72.849494</td>\n",
       "      <td>D.P's Fast Food Centre</td>\n",
       "      <td>7.5</td>\n",
       "      <td>1</td>\n",
       "      <td>52</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>1</td>\n",
       "      <td>19.141418</td>\n",
       "      <td>72.932039</td>\n",
       "      <td>McDonald's</td>\n",
       "      <td>5.5</td>\n",
       "      <td>1</td>\n",
       "      <td>15</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>2</td>\n",
       "      <td>19.132426</td>\n",
       "      <td>72.812571</td>\n",
       "      <td>Subway</td>\n",
       "      <td>6.3</td>\n",
       "      <td>1</td>\n",
       "      <td>11</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Cluster Labels   Latitude  Longitude                   Names  Rating  \\\n",
       "0               4  19.072822  72.866768              McDonald's     6.6   \n",
       "1               0  19.098715  72.827614              Shiv Sagar     7.0   \n",
       "2               2  19.141247  72.825579              McDonald's     7.5   \n",
       "3               0  19.065785  72.834304              McDonald's     6.6   \n",
       "4               1  19.165871  72.937905              McDonald's     6.8   \n",
       "5               0  19.100573  72.840708              McDonald's     6.2   \n",
       "6               4  19.106139  72.884878              McDonald's     6.5   \n",
       "7               3  19.023367  72.849494  D.P's Fast Food Centre     7.5   \n",
       "8               1  19.141418  72.932039              McDonald's     5.5   \n",
       "9               2  19.132426  72.812571                  Subway     6.3   \n",
       "\n",
       "   Price  Number of likes  \n",
       "0      1                3  \n",
       "1      2               45  \n",
       "2      1               37  \n",
       "3      1               66  \n",
       "4      1               45  \n",
       "5      1               36  \n",
       "6      1               34  \n",
       "7      1               52  \n",
       "8      1               15  \n",
       "9      1               11  "
      ]
     },
     "execution_count": 27,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "DetailsPD_merged.head(10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div style=\"width:100%;\"><div style=\"position:relative;width:100%;height:0;padding-bottom:60%;\"><iframe src=\"data:text/html;charset=utf-8;base64,\" style=\"position:absolute;width:100%;height:100%;left:0;top:0;border:none !important;\" allowfullscreen webkitallowfullscreen mozallowfullscreen></iframe></div></div>"
      ],
      "text/plain": [
       "<folium.folium.Map at 0x83a40f0cc0>"
      ]
     },
     "execution_count": 28,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# create map\n",
    "map_clusters = folium.Map(location=[latitude, longitude], zoom_start=11)\n",
    "\n",
    "# set color scheme for the clusters\n",
    "x = np.arange(kclusters)\n",
    "ys = [i + x + (i*x)**2 for i in range(kclusters)]\n",
    "colors_array = cm.rainbow(np.linspace(0, 1, len(ys)))\n",
    "rainbow = [colors.rgb2hex(i) for i in colors_array]\n",
    "\n",
    "# add markers to the map\n",
    "markers_colors = []\n",
    "for lat, lon, poi, cluster in zip(DetailsPD_merged['Latitude'], DetailsPD_merged['Longitude'], DetailsPD_merged['Names'], DetailsPD_merged['Cluster Labels']):\n",
    "    label = folium.Popup(str(poi) + ' Cluster ' + str(cluster), parse_html=True)\n",
    "    folium.CircleMarker(\n",
    "        [lat, lon],\n",
    "        radius=5,\n",
    "        popup=label,\n",
    "        color=rainbow[cluster-1],\n",
    "        fill=True,\n",
    "        fill_color=rainbow[cluster-1],\n",
    "        fill_opacity=0.5).add_to(map_clusters)\n",
    "       \n",
    "map_clusters"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "dropping the stations which are **nowhere close to** any of the fast food venues"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "metadata": {},
   "outputs": [],
   "source": [
    "RailsPD = RailsPD.drop(RailsPD[(RailsPD.Latitude < 19.007698) | (RailsPD.Latitude > 19.164600) | (RailsPD.Longitude > 72.927984)].index)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Names</th>\n",
       "      <th>Latitude</th>\n",
       "      <th>Longitude</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Kurla Railway Station</td>\n",
       "      <td>19.065333</td>\n",
       "      <td>72.879335</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Marol Naka Metro Station</td>\n",
       "      <td>19.108143</td>\n",
       "      <td>72.879373</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Wadala Railway Station</td>\n",
       "      <td>19.016792</td>\n",
       "      <td>72.858589</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Dadar Railway Station</td>\n",
       "      <td>19.018678</td>\n",
       "      <td>72.843214</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Bandra Terminus</td>\n",
       "      <td>19.063308</td>\n",
       "      <td>72.841217</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                      Names   Latitude  Longitude\n",
       "0     Kurla Railway Station  19.065333  72.879335\n",
       "1  Marol Naka Metro Station  19.108143  72.879373\n",
       "2    Wadala Railway Station  19.016792  72.858589\n",
       "3     Dadar Railway Station  19.018678  72.843214\n",
       "4           Bandra Terminus  19.063308  72.841217"
      ]
     },
     "execution_count": 30,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "RailsPD.reset_index(inplace=True,drop=True)\n",
    "RailsPD.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div style=\"width:100%;\"><div style=\"position:relative;width:100%;height:0;padding-bottom:60%;\"><iframe src=\"data:text/html;charset=utf-8;base64,\" style=\"position:absolute;width:100%;height:100%;left:0;top:0;border:none !important;\" allowfullscreen webkitallowfullscreen mozallowfullscreen></iframe></div></div>"
      ],
      "text/plain": [
       "<folium.folium.Map at 0x83a40f00b8>"
      ]
     },
     "execution_count": 31,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Rmap = folium.Map(location=[latitude, longitude], zoom_start=11)\n",
    "Z = folium.map.FeatureGroup()\n",
    "# loop through the stations names\n",
    "for lat, lng, in zip(RailsPD.Latitude, RailsPD.Longitude):\n",
    "    Z.add_child(\n",
    "        folium.features.CircleMarker(\n",
    "            [lat, lng],\n",
    "            radius=5, # define how big you want the circle markers to be\n",
    "            color='red',\n",
    "            fill=True,\n",
    "            fill_color='black',\n",
    "            fill_opacity=0.6\n",
    "        )\n",
    "    )\n",
    "\n",
    "# add incidents to map\n",
    "Rmap.add_child(Z)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The below code calculates the distance between 2 points using their Latitude and Longitude"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "metadata": {},
   "outputs": [],
   "source": [
    "def dist(Rlat,Rlon,Clat,Clon):\n",
    "    \n",
    "    Rlat = radians(Rlat)\n",
    "    Rlon = radians(Rlon)\n",
    "    Clat = radians(Clat)\n",
    "    Clon = radians(Clon)\n",
    "    \n",
    "    dist = 6371.01 * acos(sin(Rlat)*sin(Clat) + cos(Rlat)*cos(Clat)*cos(Rlon - Clon))\n",
    "    return dist"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "metadata": {},
   "outputs": [],
   "source": [
    "KClusterCent=pd.DataFrame(list(kmeans.cluster_centers_))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The following code gives all the stations which are within **2km** radius of the cluster centre "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The station Bandra Terminus is close to cluster 0 with a distance of 1.505 km\n",
      "The station Santacruz Railway Station is close to cluster 0 with a distance of 0.794 km\n",
      "The station Jogeshwari Railway Station is close to cluster 2 with a distance of 1.195 km\n",
      "The station Dadar Railway Station is close to cluster 3 with a distance of 1.066 km\n",
      "The station Elphinstone Road Railway Station is close to cluster 3 with a distance of 0.388 km\n",
      "The station Vidyavihar Railway Station is close to cluster 4 with a distance of 1.684 km\n"
     ]
    }
   ],
   "source": [
    "C2C=[]\n",
    "CNo=[]\n",
    "for i in range(len(kmeans.cluster_centers_)):\n",
    "    for j in range(len(RailsPD)):\n",
    "        x=dist(RailsPD.iloc[j,1],RailsPD.iloc[j,2],KClusterCent.iloc[i,0],KClusterCent.iloc[i,1])\n",
    "        \n",
    "        if x<2:\n",
    "            C2C.append(RailsPD.iloc[j,0])\n",
    "            CNo.append(i)\n",
    "            print(\"The station {} is close to cluster {} with a distance of {} km\".format(RailsPD.iloc[j,0],i,round(x,3)))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Data scraping the **top 10 busiest Railway stations in mumbai** with their Foot fall"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "metadata": {},
   "outputs": [],
   "source": [
    "website_url = requests.get(\"https://nearfox.com/mumbai/10-busiest-stations-in-mumbai/\").text\n",
    "busy=BeautifulSoup(website_url,'lxml')\n",
    "busy10=busy.find('div',{'class':'entry-content'})"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "metadata": {},
   "outputs": [],
   "source": [
    "Heading=list(map(str,busy10.findAll('h2')))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "metadata": {},
   "outputs": [],
   "source": [
    "for i in range(len(Heading)):\n",
    "    Heading[i]=Heading[i][4:-5] #To remove <h2></h2>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "metadata": {},
   "outputs": [],
   "source": [
    "Heading.remove(\"Kalyan Station\") #Kalyan station didnt follow the pattern while we underwent data scraping and as it was no where within 2 km of fast food resturaunts we decided to drop it."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "metadata": {},
   "outputs": [],
   "source": [
    "strB10=str(busy10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "metadata": {},
   "outputs": [],
   "source": [
    "No=[]\n",
    "indexN=[]\n",
    "n=\"lakh\"\n",
    "for i,_ in enumerate(strB10):\n",
    "    if strB10[i:i+len(n)]==\"lakh\":\n",
    "        indexN.append(i)\n",
    "    \n",
    "    \n",
    "for i,j in enumerate(indexN):\n",
    "    No.append(strB10[j-6:j])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Top 10 station with highest footfall"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Station</th>\n",
       "      <th>Footfall in Lakhs</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Thane Station</td>\n",
       "      <td>6.54</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Chhatrapati Shivaji Terminus Station (CST)</td>\n",
       "      <td>6.36</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Andheri Station</td>\n",
       "      <td>6.04</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Dadar Station</td>\n",
       "      <td>5.77</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Churchgate Station</td>\n",
       "      <td>5.05</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>Bandra Station</td>\n",
       "      <td>4.91</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>Virar Station</td>\n",
       "      <td>3.95</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>Kurla Station</td>\n",
       "      <td>3.81</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>Nallasopara Station</td>\n",
       "      <td>3.25</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                      Station Footfall in Lakhs\n",
       "0                               Thane Station             6.54 \n",
       "1  Chhatrapati Shivaji Terminus Station (CST)             6.36 \n",
       "2                             Andheri Station             6.04 \n",
       "3                               Dadar Station             5.77 \n",
       "4                          Churchgate Station             5.05 \n",
       "5                              Bandra Station             4.91 \n",
       "6                               Virar Station             3.95 \n",
       "7                               Kurla Station             3.81 \n",
       "8                         Nallasopara Station             3.25 "
      ]
     },
     "execution_count": 41,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "footfall=pd.DataFrame({'Station':Heading,'Footfall in Lakhs':No})\n",
    "footfall"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Station</th>\n",
       "      <th>Cluster No</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Bandra Terminus</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Santacruz Railway Station</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Jogeshwari Railway Station</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Dadar Railway Station</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Elphinstone Road Railway Station</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>Vidyavihar Railway Station</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                            Station  Cluster No\n",
       "0                   Bandra Terminus           0\n",
       "1         Santacruz Railway Station           0\n",
       "2        Jogeshwari Railway Station           2\n",
       "3             Dadar Railway Station           3\n",
       "4  Elphinstone Road Railway Station           3\n",
       "5        Vidyavihar Railway Station           4"
      ]
     },
     "execution_count": 42,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "C2C=pd.DataFrame({'Station':C2C,'Cluster No':CNo})\n",
    "C2C"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "metadata": {},
   "outputs": [],
   "source": [
    "A=C2C.merge(RailsPD,how='inner',left_on='Station',right_on='Names')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Cluster No</th>\n",
       "      <th>Names</th>\n",
       "      <th>Latitude</th>\n",
       "      <th>Longitude</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>Bandra Terminus</td>\n",
       "      <td>19.063308</td>\n",
       "      <td>72.841217</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0</td>\n",
       "      <td>Santacruz Railway Station</td>\n",
       "      <td>19.081106</td>\n",
       "      <td>72.842123</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2</td>\n",
       "      <td>Jogeshwari Railway Station</td>\n",
       "      <td>19.136533</td>\n",
       "      <td>72.848797</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3</td>\n",
       "      <td>Dadar Railway Station</td>\n",
       "      <td>19.018678</td>\n",
       "      <td>72.843214</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>3</td>\n",
       "      <td>Elphinstone Road Railway Station</td>\n",
       "      <td>19.007698</td>\n",
       "      <td>72.835719</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>4</td>\n",
       "      <td>Vidyavihar Railway Station</td>\n",
       "      <td>19.079478</td>\n",
       "      <td>72.897409</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Cluster No                             Names   Latitude  Longitude\n",
       "0           0                   Bandra Terminus  19.063308  72.841217\n",
       "1           0         Santacruz Railway Station  19.081106  72.842123\n",
       "2           2        Jogeshwari Railway Station  19.136533  72.848797\n",
       "3           3             Dadar Railway Station  19.018678  72.843214\n",
       "4           3  Elphinstone Road Railway Station  19.007698  72.835719\n",
       "5           4        Vidyavihar Railway Station  19.079478  72.897409"
      ]
     },
     "execution_count": 44,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "A.drop('Station',axis=1,inplace= True)\n",
    "A"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div style=\"width:100%;\"><div style=\"position:relative;width:100%;height:0;padding-bottom:60%;\"><iframe src=\"data:text/html;charset=utf-8;base64,\" style=\"position:absolute;width:100%;height:100%;left:0;top:0;border:none !important;\" allowfullscreen webkitallowfullscreen mozallowfullscreen></iframe></div></div>"
      ],
      "text/plain": [
       "<folium.folium.Map at 0x83a4890f28>"
      ]
     },
     "execution_count": 45,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# create map\n",
    "map_clusters = folium.Map(location=[latitude, longitude], zoom_start=11)\n",
    "\n",
    "# set color scheme for the clusters\n",
    "x = np.arange(kclusters)\n",
    "ys = [i + x + (i*x)**2 for i in range(kclusters)]\n",
    "colors_array = cm.rainbow(np.linspace(0, 1, len(ys)))\n",
    "rainbow = [colors.rgb2hex(i) for i in colors_array]\n",
    "\n",
    "# add markers to the map\n",
    "markers_colors = []\n",
    "for lat, lon in zip(KClusterCent[0], KClusterCent[1]):\n",
    "    folium.Circle(\n",
    "        [lat, lon],\n",
    "        radius=2000,\n",
    "        color=rainbow[0],\n",
    "        fill=True,\n",
    "        fill_color=rainbow[1],\n",
    "        fill_opacity=0.2).add_to(map_clusters)\n",
    "\n",
    "for lat, lon,lab in zip(A.Latitude, A.Longitude,A.Names):\n",
    "    label = folium.Popup(str(lab), parse_html=True)\n",
    "    folium.CircleMarker(\n",
    "        [lat, lon],\n",
    "        popup=label,\n",
    "        radius=5,\n",
    "        color='yellow',\n",
    "        fill=True,\n",
    "        fill_color='purple',\n",
    "        fill_opacity=0.7).add_to(map_clusters)\n",
    "    \n",
    "map_clusters"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Results and Discussion"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "In our analysis it is seen that most of the fast food resturaunts is around 5 different areas and out of these 5 areas 2 of the areas have 2 different stations in a 2 km radius from the cluster radius. the 4 stations are as follows:\n",
    "\n",
    " - Elphinstone Road Railway Station\n",
    " - Dadar Railway Station\n",
    " - Bandra Terminus\n",
    " - Santacruz Railway Station\n",
    " \n",
    " \n",
    " Out of the 4 stations **Dadar** and **Bandra** are considered in the top 10 footfall list with Dadar having a footfall of approx **5.71** lakhs per day and Bandra having **4.91** lakhs per day\n",
    " \n",
    "The competeitors in this area have a relatively cheap options and a rating of around 7.\n",
    "\n",
    "It is also noticed that individual privately owned resturaunts hold a **lot more popularity** than the massive chains such as Mcdonalds.\n",
    "\n",
    "Our advice to the buisness owner would be to open either near **Bandra or Dadar**, having **cheap options** in order to get a decent rating. \n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Further Enhancements"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "this is methodology can be applied better using even more deciding factors such as tourist areas, schools, offices etc. and the a better idea of the competitors could be achieved if more information on footfall, services available etc could be obtained. This can be implemented for any type of eshtablishment as well.\n",
    "\n",
    "A Linear regression could also have been done within the final 2 selected stations using rating as a dependent variable and distance from transports, tourist area, potential crowd in the area."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Other problem statements we could tackle using adopted solution"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The purpose of this project was to identify the area with the highest density of fast food resturaunts and to analyse the potential of high foot fall due to rail services.\n",
    "\n",
    "This can be implemented for any type of eshtablishment as well. it can include any type of restaurant or shop which will be affected by the number of people passing by"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.1"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
